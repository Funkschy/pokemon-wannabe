def next_pow_of_2(n: i64): i64 {
    if n == 0 {
        return 0;
    }

    let n = n - 1;

    n |= n >> 1;
    n |= n >> 2;
    n |= n >> 4;
    n |= n >> 8;
    n |= n >> 16;
    n |= n >> 32;

    return n + 1;
}

def ptr_to_int(p: *void): usize {
    return *(&p as *usize);
}

def int_to_ptr(i: usize): *void {
    return *(&i as **void);
}

def pow(n: i64, exp: i64): i64 {
    if exp == 0 {
        return 1;
    }

    let result = n;
    for let i = exp - 1; i > 0; i -= 1 {
        result *= n;
    }
    return result;
}
