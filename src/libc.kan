extern def malloc(size: usize): *void;
extern def calloc(num: usize, size: usize): *void;
extern def free(obj: *void);
extern def strcmp(s1: string, s2: string): usize;
extern def strncmp(s1: string, s2: string, n: usize): usize;
extern def strndup(s: string, len: usize): string;
extern def strdup(s: string): string;
extern def strlen(s: string): usize;
extern def strcat(first: string, second: string): string;
extern def strncat(first: string, second: string, len: usize): string;
extern def strcpy(dest: string, src: string): string;
extern def strchr(haystack: string, needle: i32): string;
extern def strrchr(haystack: string, needle: i32): string;
extern def memcmp(first: *void, second: *void, size: usize): i32;
extern def memset(p: *void, val: i32, n: usize): *void;
extern def memcpy(dest: *void, src: *void, size: usize): *void;
extern def memmove(dest: *void, src: *void, size: usize): *void;
extern def realloc(ptr: *void, size: usize): *void;
extern def abort();
extern def strerror(err: i32): string;
extern def getenv(name: string): string;
extern def snprintf(str: string, size: usize, fmt: string, ...): i32;

def find_char(haystack: *i8, needle: i8): *i8 {
    return strchr(haystack, needle as i32);
}

def find_last_char(haystack: *i8, needle: i8): *i8 {
    return strrchr(haystack, needle as i32);
}
